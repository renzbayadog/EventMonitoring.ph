@using codegen.Extensions
@rendermode InteractiveServer
@implements IDisposable

<div class="page-header flex-wrap" style="margin-top:0rem">
    <h3 class="mb-0">
        Hi, Welcome to <span class="p-l-0 h6 select2-selection--multiple text-muted d-inline-block"> Event Registration System with QR Code</span>
    </h3>
    <div class="d-flex" style="margin-top:20px;">
        <button type="button" class="btn btn-sm btn-outline-warning btn-icon-text border-1 position-relative ml-4" @onclick="(()=>homeGenericState.GetProcessingOrderButtonClicked(OrderState.Processing, true))">
            <i class="mdi mdi-sync-off btn-icon-prepend"></i>
            Events
            <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-warning">
                @adminState.ProcessingCount
                <span class="visually-hidden">unread messages</span>
            </span>
        </button>
        <button type="button" class="btn btn-sm btn-outline-primary btn-icon-text border-1 position-relative ml-4" @onclick="(()=>homeGenericState.GetProcessingOrderButtonClicked(OrderState.Delivering, true))">
            <i class="mdi mdi-sync-off btn-icon-prepend"></i>
            Listed Audience
            <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-warning">
                @adminState.DeliveringCount
                <span class="visually-hidden">unread messages</span>
            </span>
        </button>
        <button type="button" class="btn btn-sm btn-outline-success btn-icon-text border-1 position-relative ml-4" @onclick="(()=>homeGenericState.GetProcessingOrderButtonClicked(OrderState.Delivered, true))">
            <i class="mdi mdi-sync-off btn-icon-prepend"></i>
            Finished Events
            <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-warning">
                @adminState.DeliveredCount
                <span class="visually-hidden">unread messages</span>
            </span>
        </button>
        <button type="button" class="btn btn-sm btn-outline-danger btn-icon-text border-1 position-relative ml-4" @onclick="(()=>homeGenericState.GetProcessingOrderButtonClicked(OrderState.Canceled, true))">
            <i class="mdi mdi-sync-off btn-icon-prepend"></i>
            Ongoing-Events
            <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-warning">
                @adminState.CanceledCount
                <span class="visually-hidden">unread messages</span>
            </span>
        </button>
    </div>
</div>

@code
{
    public int Count { get; set; }
    protected override async Task OnInitializedAsync()
    {
        adminState.StateChanged += StateHasChanged;
        await adminState.GetActiveOrdersCount();
    }

    public void Dispose() => adminState.StateChanged -= StateHasChanged;
}